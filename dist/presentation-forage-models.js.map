{"version":3,"sources":["webpack://presentation-forage-models/webpack/universalModuleDefinition","webpack://presentation-forage-models/webpack/bootstrap","webpack://presentation-forage-models/external {\"commonjs\":\"next-core-model\",\"commonjs2\":\"next-core-model\",\"amd\":\"next-core-model\",\"root\":\"next-core-model\"}","webpack://presentation-forage-models/./src/defaults.js","webpack://presentation-forage-models/external {\"commonjs\":\"localforage\",\"commonjs2\":\"localforage\",\"amd\":\"localforage\",\"root\":\"localforage\"}","webpack://presentation-forage-models/./src/localforage.js","webpack://presentation-forage-models/./src/localForageCollection.js","webpack://presentation-forage-models/./src/localforageModel.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DEFAULT_KEY","LocalForage","constructor","config","localforage","createInstance","_myStore","isSupported","getItem","itemKey","then","catch","err","console","error","setItem","removeItem","clear","keyName","keys","length","numberOfKeys","LocalForageCollection","AbstractCollection","models","options","super","_key","storage","_storage","initialize","init","sync","method","model","j","toJSON","reset","warn","e","LocalForageModel","AbstractModel","attributes","args","fetch","save","update","destroy"],"mappings":"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","file":"presentation-forage-models.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"next-core-model\"), require(\"localforage\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"presentation-forage-models\", [\"next-core-model\", \"localforage\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"presentation-forage-models\"] = factory(require(\"next-core-model\"), require(\"localforage\"));\n\telse\n\t\troot[\"presentation-forage-models\"] = factory(root[\"next-core-model\"], root[\"localforage\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","const DEFAULT_KEY = \"forage\";\n\nmodule.exports.DEFAULT_KEY = DEFAULT_KEY;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import { default as localforage } from \"localforage\";\n\n/**\n * LocalForage API\n * @param {Object} config Config the base storage library\n * @see {@link https://localforage.github.io/localForage/#settings-api-config|LocalForage Config}\n */\nclass LocalForage {\n  constructor(config) {\n    if (config) {\n      localforage.createInstance(config);\n    }\n    this._myStore = localforage;\n  };\n\n  /**\n   * Is storage supported\n   * @returns {boolean} Returns true if supported\n   */\n  isSupported() {\n    return (this._myStore);\n  };\n\n  /**\n   * Gets an item from storage\n   * @param {string} key The key in storage\n   * @returns {object} Returns object from storage\n   */\n  getItem(itemKey) {\n     //console.debug(`getItem ${itemKey}`);\n     return this._myStore.getItem(itemKey)\n     .then( (value) => {\n       // This code runs once the value has been loaded\n       // from the offline store.\n       //console.log(value);\n       return value;\n     })\n     .catch( (err) => {\n       // This code runs if there were any errors\n       console.error(err);\n       throw err;\n     });\n  };\n\n  /**\n   * Sets an item to storage\n   * @param {string} key The key in storage\n   * @param {object} object The data to set\n   */\n  setItem(itemKey, object) {\n    return this._myStore.setItem(itemKey, object)\n    .then( (value) => {\n      // Do other things once the value has been saved.\n      return value;\n    })\n    .catch( (err) => {\n      // This code runs if there were any errors\n      console.error(err);\n      throw err;\n    });\n  };\n\n  /**\n   * Removes an item from storage\n   * @param {string} key The key in storage\n   */\n  removeItem(itemKey) {\n    return this._myStore.removeItem(itemKey)\n    .then( () => {\n      // Run this code once the key has been removed.\n      //console.info('Key is cleared!');\n      return;\n    })\n    .catch( (err) => {\n      // This code runs if there were any errors\n      console.error(err);\n      throw err;\n    });\n  };\n\n  /**\n   * Clears storage\n   */\n  clear() {\n    return this._myStore.clear()\n    .then( () => {\n      // Run this code once the key has been removed.\n      //console.info('DB is cleared!');\n      return;\n    })\n    .catch( (err) => {\n      // This code runs if there were any errors\n      console.error(err);\n      throw err;\n    });\n  };\n\n  /**\n   * Gets the key from storage for index\n   * @param {number} i The index in storage\n   * @returns {string} Returns the key from storage\n   */\n  key(i) {\n    //console.debug(`key ${i}`);\n    return this._myStore.key(i)\n    .then( (keyName) => {\n      // Name of the key.\n      return keyName;\n    })\n    .catch( (err) => {\n      // This code runs if there were any errors\n      console.error(err);\n      throw err;\n    });\n  };\n\n  /**\n   * Gets the keya from storage\n   * @returns {array} Returns the keys from storage\n   */\n  keys() {\n    return this._myStore.keys()\n    .then((keys) => {\n      // An array of all the key names.\n      return keys;\n    })\n    .catch( (err) => {\n      // This code runs if there were any errors\n      console.error(err);\n      throw err;\n    });\n  };\n\n  /**\n   * The length of storage by keys\n   * @returns {number} Returns the length of storage by keys\n   */\n  length() {\n    return this._myStore.length()\n    .then( (numberOfKeys) => {\n      // Outputs the length of the database.\n      return numberOfKeys;\n    })\n    .catch( (err) => {\n      // This code runs if there were any errors\n      console.error(err);\n      throw err;\n    });\n  };\n};\n\nexport default LocalForage;\n","import { AbstractCollection } from \"next-core-model\";\nimport LocalForage from \"./localforage.js\";\nimport { DEFAULT_KEY } from \"./defaults.js\";\n\n/**\n * LocalForageCollection\n * @extends AbstractCollection\n */\nclass LocalForageCollection extends AbstractCollection {\n  constructor(models, options) {\n    if (!options) {\n      options = {};\n    }\n    super(models, options);\n\n    if (options.key) {\n      this._key = options.key;\n    } else {\n      this._key = DEFAULT_KEY;\n    }\n    if (options.storage) {\n      this._storage = options.storage;\n    } else {\n      if (options.config) {\n        this._storage = new LocalForage(options.config);\n      } else {\n        this._storage = new LocalForage();\n      }\n    }\n  };\n\n  /**\n   * Base key name for the collection (simular to url for rest-based)\n   * @property {string} key The key\n   */\n   get key() {\n     return this._key;\n   };\n\n  /**\n   * Storage for the collection\n   * @property {string} storage The storage used for the collection\n   * @private\n   */\n\n  /**\n   * Initialize the model with needed wireing\n   * @param {object} options Any options to pass\n   */\n  initialize(options) {};\n  /**\n   * Custom init method for the model (called at inititlize)\n   * @param {object} options Any options to pass\n   */\n  init(options) {};\n  /**\n   * Fetch the collection\n   * @param {object} options Any options to pass\n   */\n  async fetch(options) {\n    return await this.sync(\"read\", this, options);\n  };\n  /**\n   * Save the collection\n   * @param {object} options Any options to pass\n   */\n  async save(options) {\n    return await this.sync(\"create\", this, options);\n  };\n  /**\n   * Update the collection\n   * @param {object} options Any options to pass\n   */\n  async update(options) {\n    return await this.sync(\"update\", this, options);\n  };\n  /**\n   * Destroy the collection\n   * @param {object} options Any options to pass\n   */\n  async destroy(options) {\n    return await this.sync(\"delete\", this, options);\n  };\n\n  /**\n   * Sync method for Collection\n   */\n  async sync(method, model, options) {\n    let j = {};\n    try {\n      if (!options) {\n        options = {};\n      }\n\n      if (method === \"create\" || method === \"update\") {\n        j = await this.toJSON();\n        await this._storage.setItem(this._key, j);\n      } else if (method === \"delete\") {\n        await this._storage.removeItem(this._key);\n      } else {\n        // read\n        j = await this._storage.getItem(this._key);\n        //console.debug(`getItem return ${j}`);\n        if (j) {\n          //await console.debug(\"collection get\", j);\n          await this.reset(j);\n        } else {\n          console.warn(\"no data returned\");\n        }\n      }\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n    return j;\n  };\n};\n\nexport default LocalForageCollection;\n","import { AbstractModel } from \"next-core-model\";\nimport LocalForage from \"./localforage.js\";\nimport { DEFAULT_KEY } from \"./defaults.js\";\n\n/**\n * Model\n * @extends Augmented.AbstractModel\n */\nclass LocalForageModel extends AbstractModel {\n  constructor(attributes, options, ...args) {\n    if (!options) {\n      options = {};\n    }\n    super(attributes, options, args);\n\n    if (options.key) {\n      this._key = options.key;\n    } else {\n      this._key = DEFAULT_KEY;\n    }\n    if (options.storage) {\n      this._storage = options.storage;\n    } else {\n      if (options.config) {\n        this._storage = new LocalForage(options.config);\n      } else {\n        this._storage = new LocalForage();\n      }\n    }\n  };\n\n  /**\n   * sync - Sync model data to bound localforage\n   * @method sync\n   */\n  sync(method) {\n    if (method === \"create\" || method === \"update\") {\n      return this._storage.setItem(this._key, this.toJSON());\n    } else if (method === \"delete\") {\n      return this._storage.removeItem(this._key);\n    } else {\n      // read\n      return this._storage.getItem(this._key)\n      .then( (value) => {\n        return this.reset(value);\n      });\n    }\n  };\n\n  /**\n   * Fetch the model\n   * @param {object} options Any options to pass\n   */\n  fetch() {\n    return this.sync(\"read\");\n  };\n  /**\n   * Save the model\n   * @param {object} options Any options to pass\n   */\n  save() {\n    return this.sync(\"create\");\n  };\n  /**\n   * Update the model\n   * @param {object} options Any options to pass\n   */\n  update() {\n    return this.sync(\"update\");\n  };\n  /**\n   * Destroy the model\n   * @param {object} options Any options to pass\n   */\n  destroy() {\n    return this.sync(\"delete\");\n  };\n};\n\nexport default LocalForageModel;\n"],"sourceRoot":""}